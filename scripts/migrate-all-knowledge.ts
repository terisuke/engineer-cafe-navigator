#!/usr/bin/env tsx

import { config } from 'dotenv';
config();

import { createClient } from '@supabase/supabase-js';

// Configuration from environment variables
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Missing environment variables:');
  console.error('NEXT_PUBLIC_SUPABASE_URL:', !!supabaseUrl);
  console.error('SUPABASE_SERVICE_ROLE_KEY:', !!supabaseServiceKey);
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: { persistSession: false }
});

// Complete knowledge base entries from seed-knowledge-base.ts
const allKnowledgeEntries = [
  // Japanese entries
  {
    content: '„Ç®„É≥„Ç∏„Éã„Ç¢„Ç´„Éï„Çß„ÅØÁ¶èÂ≤°Â∏Ç‰∏≠Â§ÆÂå∫Â§©Á•û„Å´„ÅÇ„Çã„ÄÅIT„Ç®„É≥„Ç∏„Éã„Ç¢Âêë„Åë„ÅÆÂÖ¨ÂÖ±ÊñΩË®≠„Åß„Åô„ÄÇÂñ∂Ê•≠ÊôÇÈñì„ÅØ9:00-22:00„ÄÅ‰ºëÈ§®Êó•„ÅØÊØéÊúàÊúÄÁµÇÊúàÊõúÊó•ÔºàÁ•ùÊó•„ÅÆÂ†¥Âêà„ÅØÁøåÂπ≥Êó•Ôºâ„Å®Âπ¥Êú´Âπ¥ÂßãÔºà12/29-1/3Ôºâ„Åß„Åô„ÄÇÈ´òÈÄü„Ç§„É≥„Çø„Éº„Éç„ÉÉ„Éà„ÄÅÈõªÊ∫êÂÆåÂÇô„ÄÅ‰ºöË≠∞ÂÆ§„ÄÅ„Ç§„Éô„É≥„Éà„Çπ„Éö„Éº„Çπ„Å™„Å©„ÅÆË®≠ÂÇô„ÇíÁÑ°Êñô„ÅßÊèê‰æõ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
    category: 'Âü∫Êú¨ÊÉÖÂ†±',
    subcategory: 'Ê¶ÇË¶Å',
    language: 'ja',
    source: 'official',
    metadata: { title: '„Ç®„É≥„Ç∏„Éã„Ç¢„Ç´„Éï„Çß„Å®„ÅØ' }
  },
  {
    content: 'ÊúàÈ°ç‰ºöÂì°„Éó„É©„É≥„ÅØ8,000ÂÜÜ„Åã„Çâ„ÄÇ„Éâ„É≠„ÉÉ„Éó„Ç§„É≥Âà©Áî®„ÅØ1ÊôÇÈñì500ÂÜÜ„ÄÅ1Êó•ÊúÄÂ§ß2,000ÂÜÜ„ÄÇÂ≠¶ÁîüÂâ≤Âºï„ÅÇ„ÇäÔºà50%OFFÔºâ„ÄÇÊ≥ï‰∫∫„Éó„É©„É≥„ÇÇ„ÅîÁî®ÊÑè„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
    category: 'ÊñôÈáë',
    subcategory: '‰ºöÂì°„Éó„É©„É≥',
    language: 'ja',
    source: 'official',
    metadata: { title: 'ÊñôÈáë„Éó„É©„É≥' }
  },
  {
    content: 'ÊúÄÂ§ß20ÂêçÂèéÂÆπÂèØËÉΩ„Å™‰ºöË≠∞ÂÆ§„Çí3ÂÆ§ÂÆåÂÇô„ÄÇ„Éó„É≠„Ç∏„Çß„ÇØ„Çø„Éº„ÄÅ„Éõ„ÉØ„Ç§„Éà„Éú„Éº„Éâ„ÄÅWeb‰ºöË≠∞„Ç∑„Çπ„ÉÜ„É†ÂÆåÂÇô„ÄÇ‰ºöÂì°„ÅØ1ÊôÇÈñì1,000ÂÜÜ„ÄÅÈùû‰ºöÂì°„ÅØ1ÊôÇÈñì2,000ÂÜÜ„Åß„ÅîÂà©Áî®„ÅÑ„Åü„Å†„Åë„Åæ„Åô„ÄÇ',
    category: 'Ë®≠ÂÇô',
    subcategory: '‰ºöË≠∞ÂÆ§',
    language: 'ja',
    source: 'official',
    metadata: { title: '‰ºöË≠∞ÂÆ§ÊÉÖÂ†±' }
  },
  {
    content: '„Ç®„É≥„Ç∏„Éã„Ç¢„Ç´„Éï„Çß„Åß„ÅØÊØéÈÄ±ÊäÄË°ìÂãâÂº∑‰ºö„ÇÑ„Éè„É≥„Ç∫„Ç™„É≥„Çª„Éü„Éä„Éº„ÇíÈñãÂÇ¨„ÄÇAI„ÄÅWebÈñãÁô∫„ÄÅ„É¢„Éê„Ç§„É´ÈñãÁô∫„ÄÅ„Ç§„É≥„Éï„É©„Å™„Å©ÂπÖÂ∫É„ÅÑ„ÉÜ„Éº„Éû„ÇíÊâ±„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ‰ºöÂì°„ÅØÁÑ°Êñô„ÅßÂèÇÂä†ÂèØËÉΩ„ÄÇ',
    category: '„Ç§„Éô„É≥„Éà',
    subcategory: 'ÂãâÂº∑‰ºö',
    language: 'ja',
    source: 'official',
    metadata: { title: '„Ç§„Éô„É≥„Éà„ÉªÂãâÂº∑‰ºö' }
  },
  {
    content: 'Á¶èÂ≤°Â∏ÇÂñ∂Âú∞‰∏ãÈâÑÂ§©Á•ûÈßÖ„Åã„ÇâÂæíÊ≠©3ÂàÜ„ÄÇË•øÈâÑÁ¶èÂ≤°ÔºàÂ§©Á•ûÔºâÈßÖ„Åã„ÇâÂæíÊ≠©5ÂàÜ„ÄÇÈßêËªäÂ†¥„ÅØ„Åî„Åñ„ÅÑ„Åæ„Åõ„Çì„Åå„ÄÅËøëÈö£„Å´„Ç≥„Ç§„É≥„Éë„Éº„Ç≠„É≥„Ç∞„ÅåÂ§öÊï∞„ÅÇ„Çä„Åæ„Åô„ÄÇ',
    category: '„Ç¢„ÇØ„Çª„Çπ',
    subcategory: '‰∫§ÈÄö',
    language: 'ja',
    source: 'official',
    metadata: { title: '„Ç¢„ÇØ„Çª„ÇπÊÉÖÂ†±' }
  },
  {
    content: 'È´òÈÄüÂÖâ„Éï„Ç°„Ç§„Éê„ÉºÂõûÁ∑öÔºà‰∏ä‰∏ã1GbpsÔºâ„ÇíÂÆåÂÇô„ÄÇÊúâÁ∑öLAN„ÄÅWi-Fi‰∏°ÊñπÂà©Áî®ÂèØËÉΩ„ÄÇVPNÊé•Á∂öÂØæÂøú„ÄÇ„Çª„Ç≠„É•„Ç¢„Å™ÈñãÁô∫Áí∞Â¢É„Çí„ÅîÊèê‰æõ„Åó„Åæ„Åô„ÄÇ',
    category: 'Ë®≠ÂÇô',
    subcategory: '„Ç§„É≥„Çø„Éº„Éç„ÉÉ„Éà',
    language: 'ja',
    source: 'official',
    metadata: { title: '„Ç§„É≥„Çø„Éº„Éç„ÉÉ„ÉàÁí∞Â¢É' }
  },
  {
    content: '3D„Éó„É™„É≥„Çø„Éº„ÄÅ„É¨„Éº„Ç∂„Éº„Ç´„ÉÉ„Çø„Éº„ÄÅ„ÅØ„Çì„Å†„Åî„Å¶„Å™„Å©„ÅÆ„É°„Ç§„Ç´„Éº„Çπ„Éö„Éº„Çπ„Çí‰ΩµË®≠„ÄÇIoT„Éá„Éê„Ç§„Çπ„ÅÆË©¶‰Ωú„ÇÑ„Éó„É≠„Éà„Çø„Ç§„Éî„É≥„Ç∞„ÅåÂèØËÉΩ„Åß„Åô„ÄÇÂà©Áî®„ÅØ‰∫àÁ¥ÑÂà∂„ÄÇ',
    category: 'Ë®≠ÂÇô',
    subcategory: '„É°„Ç§„Ç´„Éº„Çπ„Éö„Éº„Çπ',
    language: 'ja',
    source: 'official',
    metadata: { title: '„É°„Ç§„Ç´„Éº„Çπ„Éö„Éº„Çπ' }
  },
  {
    content: 'ÊäÄË°ìÊõ∏„É©„Ç§„Éñ„É©„É™„Éº„Å´„ÅØÊúÄÊñ∞„ÅÆÊäÄË°ìÊõ∏Á±ç„Åå1000ÂÜä‰ª•‰∏ä„ÄÇ„Ç™„É©„Ç§„É™„Éº„ÄÅÊäÄË°ìË©ïË´ñÁ§æ„Å™„Å©„ÅÆÂÆöÁï™Êõ∏Á±ç„Åã„ÇâÊúÄÊñ∞Âàä„Åæ„Åß„ÄÇ‰ºöÂì°„ÅØËá™Áî±„Å´Èñ≤Ë¶ßÂèØËÉΩ„ÄÇ',
    category: 'Ë®≠ÂÇô',
    subcategory: '„É©„Ç§„Éñ„É©„É™„Éº',
    language: 'ja',
    source: 'official',
    metadata: { title: 'ÊäÄË°ìÊõ∏„É©„Ç§„Éñ„É©„É™„Éº' }
  },

  // English entries
  {
    content: 'Engineer Cafe is a coworking space for IT engineers located in Tenjin, Fukuoka. Operating hours: 9:00-22:00, closed on the last Monday of each month (next weekday if holiday) and year-end holidays (12/29-1/3). Provides free facilities including high-speed internet, power outlets, meeting rooms, and event spaces.',
    category: 'General',
    subcategory: 'Overview',
    language: 'en',
    source: 'official',
    metadata: { title: 'About Engineer Cafe' }
  },
  {
    content: 'Monthly membership starts from ¬•8,000. Drop-in rate is ¬•500/hour, max ¬•2,000/day. Student discount available (50% OFF). Corporate plans also available.',
    category: 'Pricing',
    subcategory: 'Membership',
    language: 'en',
    source: 'official',
    metadata: { title: 'Pricing Plans' }
  },
  {
    content: '3 meeting rooms available, each accommodating up to 20 people. Equipped with projectors, whiteboards, and video conferencing systems. Members: ¬•1,000/hour, Non-members: ¬•2,000/hour.',
    category: 'Facilities',
    subcategory: 'Meeting Rooms',
    language: 'en',
    source: 'official',
    metadata: { title: 'Meeting Room Information' }
  },
  {
    content: 'Weekly tech meetups and hands-on seminars covering AI, web development, mobile development, infrastructure, and more. Free for members to attend.',
    category: 'Events',
    subcategory: 'Meetups',
    language: 'en',
    source: 'official',
    metadata: { title: 'Events & Meetups' }
  },
  {
    content: '3-minute walk from Tenjin Station (Fukuoka City Subway). 5-minute walk from Nishitetsu Fukuoka (Tenjin) Station. No parking available, but many coin parking lots nearby.',
    category: 'Access',
    subcategory: 'Transportation',
    language: 'en',
    source: 'official',
    metadata: { title: 'Access Information' }
  },
  {
    content: 'High-speed fiber optic connection (1Gbps up/down). Both wired LAN and Wi-Fi available. VPN-friendly. Secure development environment provided.',
    category: 'Facilities',
    subcategory: 'Internet',
    language: 'en',
    source: 'official',
    metadata: { title: 'Internet Environment' }
  },
  {
    content: 'Maker space with 3D printers, laser cutters, soldering stations, and more. Perfect for IoT device prototyping. Reservation required.',
    category: 'Facilities',
    subcategory: 'Maker Space',
    language: 'en',
    source: 'official',
    metadata: { title: 'Maker Space' }
  },
  {
    content: 'Tech book library with over 1000 latest technical books. From O\'Reilly classics to the latest publications. Free access for all members.',
    category: 'Facilities',
    subcategory: 'Library',
    language: 'en',
    source: 'official',
    metadata: { title: 'Tech Book Library' }
  }
];

async function migrateAllKnowledge() {
  console.log('üöÄ Migrating all knowledge to Supabase...');
  
  try {
    // Check current total entries
    const { count: totalCount, error: countError } = await supabase
      .from('knowledge_base')
      .select('*', { count: 'exact', head: true });
    
    if (countError) {
      console.error('‚ùå Error checking total entries:', countError);
      return;
    }
    
    console.log(`üìä Current total entries: ${totalCount}`);
    
    // Check for existing entries to avoid duplicates
    const { data: existing, error: checkError } = await supabase
      .from('knowledge_base')
      .select('content, subcategory, language');
    
    if (checkError) {
      console.error('‚ùå Error checking existing entries:', checkError);
      return;
    }
    
    console.log(`üìä Found ${existing?.length || 0} existing entries`);
    
    // Filter out entries that already exist
    const newEntries = allKnowledgeEntries.filter(entry => {
      return !existing?.some(existingEntry => 
        existingEntry.content === entry.content && 
        existingEntry.subcategory === entry.subcategory &&
        existingEntry.language === entry.language
      );
    });
    
    console.log(`üìù ${newEntries.length} new entries to add`);
    
    if (newEntries.length === 0) {
      console.log('‚úÖ All knowledge entries already exist in Supabase');
      return;
    }
    
    // Insert new entries
    const { data, error } = await supabase
      .from('knowledge_base')
      .insert(newEntries)
      .select();
    
    if (error) {
      console.error('‚ùå Error inserting knowledge entries:', error);
      return;
    }
    
    console.log(`‚úÖ Successfully added ${data?.length || 0} knowledge entries to Supabase`);
    
    // Verify the final count
    const { count: newTotalCount, error: newCountError } = await supabase
      .from('knowledge_base')
      .select('*', { count: 'exact', head: true });
    
    if (newCountError) {
      console.error('‚ùå Error checking new total:', newCountError);
      return;
    }
    
    console.log(`üìä New total entries: ${newTotalCount}`);
    console.log(`‚ûï Added: ${(newTotalCount || 0) - (totalCount || 0)} entries`);
    
    // Show summary by category
    const { data: summary, error: summaryError } = await supabase
      .from('knowledge_base')
      .select('category, language')
      .order('category');
    
    if (!summaryError && summary) {
      const categoryStats = summary.reduce((acc, entry) => {
        const key = `${entry.category} (${entry.language})`;
        acc[key] = (acc[key] || 0) + 1;
        return acc;
      }, {} as Record<string, number>);
      
      console.log('\nüìä Knowledge base summary:');
      Object.entries(categoryStats).forEach(([category, count]) => {
        console.log(`   ${category}: ${count} entries`);
      });
    }
    
    console.log('\n‚ú® Knowledge migration completed!');
    console.log('üéØ You can now manage all knowledge at localhost:3000/admin/knowledge');
    
  } catch (error) {
    console.error('‚ùå Unexpected error:', error);
  }
}

// Run the script
migrateAllKnowledge();